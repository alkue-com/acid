name: 'acid'
description: 'Azure Container Instances Deployer.'
inputs:
  action:
    description: 'deploy/delete'
    required: true
  subscription:
    description: 'Existing Azure subscription name or id.'
    required: true
  rg:
    description: 'Existing Azure resource group name.'
    required: true
  location:
    description: 'Azure region.'
  aci:
    description: 'Name of the Azure Container Instances to create.'
  image:
    description: 'Existing Docker image reference (fqdn/repository:tag).'
  vnet:
    description: 'Existing Azure virtual network name or id.'
  subnet:
    description: 'Existing Azure subnet name or id.'
  env_variables:
    description: 'Environment variables for container. Space-separated list.'
  env_secrets:
    description: 'Secret variables for container. Space-separated list.'
  cpus:
    description: 'The required number of CPU cores of the container.'
    default: '1'
  memory_gbs:
    description: 'The required memory of the container in GB.'
    default: '1.5'
  restart_policy:
    description: 'Container restart policy: Always, Never, OnFailure.'
    default: 'Always'
  law:
    description: 'Existing Log Analytics workspace name or id.'
  law_key:
    description: 'The Log Analytics workspace key.'
  cmd:
    description: 'Command to run in container. String. Overrides Dockerfile CMD.'
  az_args:
    description: 'Azure CLI arguments, possibly overriding previous arguments.'

outputs:
  vnet:
    description: 'Virtual network name where ACI was deployed to/deleted from'
  subnet:
    description: 'Subnet name where ACI was deployed to/deleted from'

runs:
  using: 'composite'
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Run acid
      run: acid ${{ inputs.az_args }}
      shell: bash
      env:
        INPUT_ACTION: ${{ inputs.action }}
        INPUT_SUBSCRIPTION: ${{ inputs.subscription }}
        INPUT_RG: ${{ inputs.rg }}
        INPUT_LOCATION: ${{ inputs.location }}
        INPUT_ACI: ${{ inputs.aci }}
        INPUT_IMAGE: ${{ inputs.image }}
        INPUT_VNET: ${{ inputs.vnet }}
        INPUT_SUBNET: ${{ inputs.subnet }}
        INPUT_ENV_VARIABLES: ${{ inputs.env_variables }}
        INPUT_ENV_SECRETS: ${{ inputs.env_secrets }}
        INPUT_CPUS: ${{ inputs.cpus }}
        INPUT_MEMORY_GBS: ${{ inputs.memory_gbs }}
        INPUT_RESTART_POLICY: ${{ inputs.restart_policy }}
        INPUT_LAW: ${{ inputs.law }}
        INPUT_LAW_KEY: ${{ inputs.law_key }}
        INPUT_CMD: ${{ inputs.cmd }}

branding:
    icon: 'cloud'
    color: 'yellow'
