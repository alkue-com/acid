name: 'acid'
description: 'Azure Container Instances Deployer.'
inputs:
  action:
    description: 'deploy/delete'
    required: true
  subscription:
    description: 'Existing Azure subscription name'
    required: true
  location:
    description: 'Azure region'
    required: true
  rg:
    description: 'Existing Azure resource group name'
    required: true
  aci:
    description: 'Name of the Azure Container Instances to create'
    required: true
  image:
    description: 'Existing Docker image reference (fqdn/repository:tag)'
    required: true
  vnet:
    description: 'Existing Azure virtual network name'
    required: true
  subnet:
    description: 'Existing Azure virtual network subnet name'
    required: true
  creds:
    description: 'Azure Service Principal JSON object (= AZURE_CREDENTIALS)'
    required: true
  env_variables:
    description: 'Environment variables for container'
  env_secrets:
    description: 'Secret environment variables for container'
  cpus:
    description: 'Number of CPU cores for container'
    default: '1'
  memory_gbs:
    description: 'Memory (in gigabytes) for container'
    default: '1.5'
  restart_policy:
    description: 'Container restart policy'
    default: 'OnFailure'

outputs:
  subnet:
    description: 'Subnet name where ACI was deployed to or deleted from'

runs:
  using: 'composite'
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Run acid
      run: entrypoint.sh
      shell: bash
      env:
        INPUT_ACTION: ${{ inputs.action }}
        INPUT_LOCATION: ${{ inputs.location }}
        INPUT_SUBSCRIPTION: ${{ inputs.subscription }}
        INPUT_RG: ${{ inputs.rg }}
        INPUT_ACI: ${{ inputs.aci }}
        INPUT_IMAGE: ${{ inputs.image }}
        INPUT_VNET: ${{ inputs.vnet }}
        INPUT_SUBNET: ${{ inputs.subnet }}
        INPUT_CREDS: ${{ inputs.creds }}
        INPUT_ENV_VARIABLES: ${{ inputs.env_variables }}
        INPUT_ENV_SECRETS: ${{ inputs.env_secrets }}
        INPUT_CPUS: ${{ inputs.cpus }}
        INPUT_MEMORY_GBS: ${{ inputs.memory_gbs }}
        INPUT_RESTART_POLICY: ${{ inputs.restart_policy }}

branding:
    icon: 'cloud'
    color: 'yellow'
