#!/bin/bash

# shellcheck disable=SC2034

set -Eo pipefail

### inputs #####################################################################

# required
action="$INPUT_ACTION"
subscription="$INPUT_SUBSCRIPTION"
location="$INPUT_LOCATION"
rg="$INPUT_RG"
aci="$INPUT_ACI"
image="$INPUT_IMAGE"

# optional
vnet="$INPUT_VNET"
subnet="$INPUT_SUBNET"
env_variables="$INPUT_ENV_VARIABLES"
env_secrets="$INPUT_ENV_SECRETS"
cpus="$INPUT_CPUS"
memory_gbs="$INPUT_MEMORY_GBS"
restart_policy="$INPUT_RESTART_POLICY"
law="$INPUT_LAW"
law_key="$INPUT_LAW_KEY"
cmd="$INPUT_CMD"

# any azure cli args
az_args="$*"

### functions ##################################################################

_get_used_subnet() {
  az container show \
    --name "$aci" \
    --subscription "$subscription" \
    --resource-group "$rg" \
    --query 'subnetIds[0].id' | jq -r | rev | cut -d '/' -f 1 | rev
}

deploy() {
  echo "acid: Deploying -------------------------------------------------------"
  if [ -z "$subscription" ] || [ -z "$rg" ]; then
    echo "Error: Requires subscription and rg."
    exit 1
  fi

  local create_command="az container create --subscription $subscription \
    --resource-group $rg"

  [ -n "$vnet" ] && create_command="$create_command \
    --vnet $vnet"

  [ -n "$subnet" ] && create_command="$create_command \
    --subnet $subnet"

  [ -n "$env_variables" ] && create_command="$create_command \
    --environment-variables $env_variables"

  [ -n "$env_secrets" ] && create_command="$create_command \
    --secure-environment-variables $env_secrets"

  [ -n "$law" ] && create_command="$create_command \
    --log-analytics-workspace $law"

  [ -n "$law_key" ] && create_command="$create_command \
    --log-analytics-workspace-key $law_key"

  [ -n "$cmd" ] && create_command="$create_command \
    --command-line \"$cmd\""

  [ -n "$az_args" ] && create_command="$create_command $az_args"

  eval "$create_command"

  echo "vnet=$vnet subnet=$subnet" >>"$GITHUB_OUTPUT"
}

delete() {
  echo "acid: Deleting --------------------------------------------------------"
  if [ -z "$subscription" ] || [ -z "$rg" ] || [ -z "$aci" ]; then
    echo "Error: Requires subscription, rg, aci."
    exit 1
  fi

  local subnet=
  subnet="$(_get_used_subnet)"

  eval az container delete --yes \
    --subscription "$subscription" \
    --resource-group "$rg" \
    --name "$aci" \
    "$az_args"

  echo "subnet=$subnet" >>"$GITHUB_OUTPUT"
}

### main #######################################################################

if [ "$action" != "deploy" ] && [ "$action" != "delete" ]; then
  echo "Error: Unknown action: $action. Allowed: deploy/delete."
  exit 1
fi

# shellcheck disable=SC2154  # exits with the status of the failed command
trap 'status=$?; echo "acid: az command failed"; exit $status' ERR

"$action"

echo "acid: finished successfully ðŸ« "
